if game.PlaceId ~= 10449761463 then

    local ScreenGui = Instance.new("ScreenGui")
    local TextLabel = Instance.new("TextLabel")
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    TextLabel.Parent = ScreenGui
    TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
    TextLabel.BorderColor3 = Color3.new(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0.419147223, 0, 0.468592972, 0)
    TextLabel.Size = UDim2.new(0, 200, 0, 50)
    TextLabel.Font = Enum.Font.SourceSans
    TextLabel.Text = "this game is not supported lmao"
    TextLabel.TextColor3 = Color3.new(0, 0, 0)
    TextLabel.TextSize = 14
    return
end
    
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Totally Normal HUB",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Totally Normal HUB",
   LoadingSubtitle = "by Dinguz",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = true,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = TotallyNormal, -- Create a custom folder for your hub/game
      FileName = "TSB"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Totally Normal",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"GYAT"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main", "laptop")
local Section = Tab:CreateSection("Exploits")

local Toggle = Tab:CreateToggle({
   Name = "Kill Auto Farm (Executor Unsupported)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

local Button = Tab:CreateButton({
   Name = "Gojo Moveset",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 250},
   Increment = 10,
   Suffix = "Walkspeed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})

wait(2)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://5257382967"
sound.Volume = 2
sound.Looped = false
sound.Parent = game.SoundService
sound:Play()


local cc = Instance.new("ColorCorrectionEffect")
cc.TintColor = Color3.new(1, 0, 0) -- Czerwony
cc.Saturation = 0
cc.Contrast = 0
cc.Parent = game.Lighting

task.spawn(function()
    while task.wait(0.1) do
        cc.Saturation = cc.Saturation + 0.05
        cc.Contrast = cc.Contrast + 0.1
        if cc.Saturation >= 1 and cc.Contrast >= 5 then
            break
        end
    end
end)
wait(3)
cc:Destroy()
wait(10)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18909603132"
sound.Volume = 5
sound.Looped = false
sound.Parent = game.SoundService
sound:Play()
local cc = Instance.new("ColorCorrectionEffect")
cc.TintColor = Color3.new(1, 0, 0) -- Czerwony
cc.Saturation = 5
cc.Contrast = 5
cc.Parent = game.Lighting
wait(0.5)
cc:Destroy()

wait(5)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18909603132"
sound.Volume = 5
sound.Looped = false
sound.Parent = game.SoundService
sound:Play()
local cc = Instance.new("ColorCorrectionEffect")
cc.TintColor = Color3.new(1, 0, 0) -- Czerwony
cc.Saturation = 5
cc.Contrast = 5
cc.Parent = game.Lighting
wait(0.5)
cc:Destroy()

Rayfield:Notify({
   Title = "Something went wrong...",
   Content = "Reloading",
   Duration = 6.5,
   Image = "activity",
})
wait(6.5)
local Window = Rayfield:CreateWindow({
   Name = "Reloaded!",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "The hub crashed recently due to an unexpected error.",
   LoadingSubtitle = "by Dinguz",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("ERROR 404", 4483362458) -- Title, Image
wait(1)
local Lighting = game.Lighting
local Player = game.Players.LocalPlayer
local Camera = game.Workspace.CurrentCamera
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

-- Tworzenie efektów
local cc = Instance.new("ColorCorrectionEffect")
cc.Saturation = 0
cc.Contrast = 0
cc.TintColor = Color3.new(1, 1, 1)
cc.Parent = Lighting

local dof = Instance.new("DepthOfFieldEffect")
dof.FarIntensity = 0
dof.NearIntensity = 0
dof.FocusDistance = 500
dof.Parent = Lighting

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://172313730" -- wpisz ID dźwięku
sound.Volume = 5
sound.Looped = false
sound.Parent = game.SoundService

local clouds = Instance.new("Clouds")
clouds.Parent = Lighting

-- Zmienne do efektów
local fovTarget = 30 -- Minimalny FOV
local duration = 15 -- czas efektu w sekundach
local shakeMagnitude = 1.5 -- siła trzęsienia kamery

local startTime = tick()

-- Efekt shakowania kamery
local function shakeCamera()
    local elapsed = tick() - startTime
    if elapsed < duration then
        local offset = Vector3.new(
            math.random(-shakeMagnitude, shakeMagnitude) / 10,
            math.random(-shakeMagnitude, shakeMagnitude) / 10,
            math.random(-shakeMagnitude, shakeMagnitude) / 10
        )
        Camera.CFrame = Camera.CFrame * CFrame.new(offset)
    end
end

-- Włączenie dźwięku na początku efektu
sound:Play()

-- Główna pętla efektu
RunService.RenderStepped:Connect(function()
    local elapsed = tick() - startTime
    if elapsed < duration then
        local progress = elapsed / duration

        -- Stopniowe zmiany
        Camera.FieldOfView = 70 - (progress * (70 - fovTarget))
        cc.Saturation = progress * 5
        cc.Contrast = progress * 3
        cc.TintColor = Color3.new(1, 0, 0) -- coraz bardziej czerwony świat
        dof.FarIntensity = progress * 1.5
        dof.NearIntensity = progress * 1.5
        dof.FocusDistance = 50 - (progress * 40)

        shakeCamera()
    else
        -- Po 15 sekundach wszystko wraca do normy
        Camera.FieldOfView = 70
        cc:Destroy()
        dof:Destroy()
        clouds:Destroy()

        -- Wyłączenie dźwięku
        sound:Stop()
        sound:Destroy()
    end
end)
